// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  email     String   @unique
  createdAt DateTime @default(now())

  thirdPartyApps ThirdPartyApp[]
  AuthToken      AuthToken[]
  TwoFactorCode  TwoFactorCode[]
}

model AuthToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  expiresAt DateTime
}

model TwoFactorCode {
  id              Int           @id @default(autoincrement())
  code            String        @unique
  user            User          @relation(fields: [userId], references: [id])
  userId          Int
  thirdPartyApp   ThirdPartyApp @relation(fields: [thirdPartyAppId], references: [id])
  thirdPartyAppId Int
  createdAt       DateTime      @default(now())
  expiresAt       DateTime
}

model ThirdPartyApp {
  id           Int      @id @default(autoincrement())
  name         String
  email        String   @unique
  password     String
  clientSecret String   @unique
  description  String?
  isactive     Boolean  @default(true)
  createdAt    DateTime @default(now())

  users         User[]
  TwoFactorCode TwoFactorCode[]
}
